//
//  ProductsViewController.swift
//  Hurb-iOS-Challenge
//
//  Created by RÃ´mulo Monteiro on 10/01/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductsDisplayLogic: AnyObject {
    
    func displaySomething(viewModel: Products.Something.ViewModel)
}

class ProductsViewController: UIViewController {
    
    var interactor: ProductsBusinessLogic?
    var router: (NSObjectProtocol & ProductsRoutingLogic & ProductsDataPassing)?
    
    //    private lazy var dataSource: UICollectionViewDiffableDataSource<CollectionViewSection<SolutionsSection>.ID, CollectionViewItem.ID>! = nil
    //    private lazy var sectionsStore: AnyModelStore<CollectionViewSection<SolutionsSection>> = AnyModelStore([])
    //    private lazy var itemsStore: AnyModelStore<CollectionViewItem> = AnyModelStore([])
    
    private lazy var searchController = UISearchController(searchResultsController: nil)
    
    @IBOutlet private weak var collectionView: UICollectionView!
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setupSearchController()
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        super.prepare(for: segue, sender: sender)
        
    }
    
    private func setupSearchController() {
        
        self.navigationItem.searchController = self.searchController
        self.searchController.obscuresBackgroundDuringPresentation = false
        self.searchController.searchBar.placeholder = "Quero ir para..."
        self.searchController.searchBar.delegate = self
    }
    
    // MARK: Do something
    
    func doSomething() {
        
        let request = Products.Something.Request()
        interactor?.doSomething(request: request)
    }
}

extension ProductsViewController: ProductsDisplayLogic {
    
    func displaySomething(viewModel: Products.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}

extension ProductsViewController: UISearchBarDelegate {
    
}
