//
//  SearchProductInteractor.swift
//  Hurb-iOS-Challenge
//
//  Created by RÃ´mulo Monteiro on 10/01/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchProductBusinessLogic {
    
    func searchProducts(request: SearchProduct.Query.Request)
}

protocol SearchProductDataStore {
    
    //var name: String { get set }
}

class SearchProductInteractor: SearchProductBusinessLogic, SearchProductDataStore {
    
    var presenter: SearchProductPresentationLogic?
    var worker: SearchProductWorkerProtocol?
    //var name: String = ""
    
    init(presenter: SearchProductPresentationLogic, worker: SearchProductWorkerProtocol) {
        
        self.presenter = presenter
        self.worker = worker
    }
    
    // MARK: Do something
    
    func searchProducts(request: SearchProduct.Query.Request) {

        if request.page <= 1 {
            
            self.presenter?.presentFirstPageSkeletonView()
        }
        
        self.worker?.searchProducts(term: request.term, page: request.page, limit: request.limit, completion: { result in
            
            switch result {
                    
                case .success(let container):
                    
                    let response = SearchProduct.Query.Response(pagination: container.pagination, products: container.products)
                    self.presenter?.presentNewProducts(response: response)
                    break
                    
                case .failure(let error):
                    self.presenter?.presentErrorAlert()
                    break
            }
        })
    }
}
